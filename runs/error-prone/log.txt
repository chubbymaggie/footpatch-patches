SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
Doing cluster xcl1.cluster
Doing cluster xcl3.cluster
Doing cluster xcl2.cluster
Doing cluster xcl4.cluster
SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
SEARCH STORE SIZE 1
SIZE OF ERRORS: 0
Doing cluster xcl6.cluster
Doing cluster xcl5.cluster
SEARCH STORE SIZE 10
SIZE OF ERRORS: 0
Doing cluster xcl7.cluster
SEARCH STORE SIZE 32
SIZE OF ERRORS: 1
Doing cluster xcl8.cluster
SEARCH STORE SIZE 73
SIZE OF ERRORS: 1
Doing cluster xcl9.cluster
SEARCH STORE SIZE 128
SIZE OF ERRORS: 3
Doing cluster xcl10.cluster
SEARCH STORE SIZE 95
SIZE OF ERRORS: 4
Doing cluster xcl11.cluster
SEARCH STORE SIZE 167
SIZE OF ERRORS: 4
Doing cluster xcl12.cluster
SEARCH STORE SIZE 34
SIZE OF ERRORS: 1
Doing cluster xcl13.cluster
SEARCH STORE SIZE 68
SIZE OF ERRORS: 1
Doing cluster xcl14.cluster
SEARCH STORE SIZE 12
SIZE OF ERRORS: 1
Doing cluster xcl15.cluster
SEARCH STORE SIZE 167
SIZE OF ERRORS: 7
[+] Found error: NULL_DEREFERENCE
[+] Patchable error: [core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java]:[60] :[[B2] object returned by state.getSourceForNode(tree.getRightOperand()) could be null and is dereferenced at line 60]
[+] Patch generation routine started for bug "NULL_DEREF".
[+] Looking for pvar returned in pname Description ProtoStringFieldReferenceEquality.matchBinary(BinaryTree,VisitorState)
[=] I found these typs for pvar returned
[-] No type for pvar found
[+] Found error: NULL_DEREFERENCE
[+] Patchable error: [core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java]:[59] :[[B2] object returned by state.getSourceForNode(tree.getLeftOperand()) could be null and is dereferenced at line 59]
[+] Patch generation routine started for bug "NULL_DEREF".
[+] Looking for pvar returned in pname Description ProtoStringFieldReferenceEquality.matchBinary(BinaryTree,VisitorState)
[=] I found these typs for pvar returned
[-] No type for pvar found
SEARCH STORE SIZE 151
SIZE OF ERRORS: 5
Doing cluster xcl16.cluster
SEARCH STORE SIZE 9
SIZE OF ERRORS: 0
Doing cluster xcl17.cluster
Doing cluster xcl18.cluster
SEARCH STORE SIZE 214
SIZE OF ERRORS: 10
[+] Found error: NULL_DEREFERENCE
[+] Patchable error: [core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java]:[57] :[[B2] object method last assigned on line 56 could be null and is dereferenced at line 57]
[+] Patch generation routine started for bug "NULL_DEREF".
[+] Looking for pvar method in pname boolean CheckReturnValue$1.matches(MethodInvocationTree,VisitorState)
[=] I found these typs for pvar method
	[=] class com.sun.tools.javac.code.Symbol$MethodSymbol *
[+] pvar NAME is null: "method"
[+] pvar TYPE is null: "class com.sun.tools.javac.code.Symbol$MethodSymbol *"
[+] Performing assert spec patch routine
[+] Filtered 16 null_exn candidates
	[-] No candidates found.
Linespan is 191 - 194 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/matchers/Description.java
			[*] Origin line num range: 191 - 194
			[*] Origin function: <not implemented>
			[*] extracted:       if (message == null) {
			[*] extracted:         throw new IllegalArgumentException("message must not be null");
			[*] extracted:       }
	[&] Renaming fragment fixing var to pvar: message -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "      if (message == null) {\n        throw new IllegalArgumentException(\"message must not be null\");\n      }" "message" "method" > /tmp/patch8814f3.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 177 - 180 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/matchers/Description.java
			[*] Origin line num range: 177 - 180
			[*] Origin function: <not implemented>
			[*] extracted:       if (fix == null) {
			[*] extracted:         throw new IllegalArgumentException("fix must not be null");
			[*] extracted:       }
	[&] Renaming fragment fixing var to pvar: fix -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "      if (fix == null) {\n        throw new IllegalArgumentException(\"fix must not be null\");\n      }" "fix" "method" > /tmp/patch476716.footpatch
SEARCH STORE SIZE 169
SIZE OF ERRORS: 4
Doing cluster xcl19.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 191 - 194 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/matchers/Description.java
			[*] Origin line num range: 191 - 194
			[*] Origin function: <not implemented>
			[*] extracted:       if (message == null) {
			[*] extracted:         throw new IllegalArgumentException("message must not be null");
			[*] extracted:       }
	[&] Renaming fragment fixing var to pvar: message -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "      if (message == null) {\n        throw new IllegalArgumentException(\"message must not be null\");\n      }" "message" "method" > /tmp/patch968d90.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 177 - 180 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/matchers/Description.java
			[*] Origin line num range: 177 - 180
			[*] Origin function: <not implemented>
			[*] extracted:       if (fix == null) {
			[*] extracted:         throw new IllegalArgumentException("fix must not be null");
			[*] extracted:       }
	[&] Renaming fragment fixing var to pvar: fix -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "      if (fix == null) {\n        throw new IllegalArgumentException(\"fix must not be null\");\n      }" "fix" "method" > /tmp/patchfd729f.footpatch
SEARCH STORE SIZE 55
SIZE OF ERRORS: 1
Doing cluster xcl20.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[=] Attempting patching with spec "null_exn_deref_bottom_type"
	[+] Footpatch_spec : Store size 214
					[%] Candidate pre operates on var called $irvar4
					[%] Candidate pre operates on var called $irvar4
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called $irvar4
					[%] Candidate pre operates on var called $irvar4
					[%] Candidate pre operates on var called $irvar4
					[%] Candidate pre operates on var called $irvar4
					[%] Candidate pre operates on var called $irvar3
					[%] Candidate pre operates on var called method
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
[+] Filtered candidates: 0
[+] Filtered candidates by type: 0
	[=] Attempting patching with spec "null_exn_deref_with_type"
	[+] Footpatch_spec : Store size 214
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
SEARCH STORE SIZE 6
SIZE OF ERRORS: 0
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
[+] Filtered candidates: 0
[+] Filtered candidates by type: 0
Doing cluster xcl21.cluster
Doing cluster xcl22.cluster
SEARCH STORE SIZE 33
SIZE OF ERRORS: 1
Doing cluster xcl23.cluster
SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
Doing cluster xcl24.cluster
SEARCH STORE SIZE 73
SIZE OF ERRORS: 1
Doing cluster xcl25.cluster
SEARCH STORE SIZE 45
SIZE OF ERRORS: 0
Doing cluster xcl26.cluster
SEARCH STORE SIZE 144
SIZE OF ERRORS: 7
Doing cluster xcl27.cluster
SEARCH STORE SIZE 51
SIZE OF ERRORS: 1
Doing cluster xcl28.cluster
SEARCH STORE SIZE 39
SIZE OF ERRORS: 3
Doing cluster xcl29.cluster
SEARCH STORE SIZE 151
SIZE OF ERRORS: 3
Doing cluster xcl30.cluster
SEARCH STORE SIZE 168
SIZE OF ERRORS: 8
Doing cluster xcl31.cluster
SEARCH STORE SIZE 106
SIZE OF ERRORS: 1
Doing cluster xcl32.cluster
SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
Doing cluster xcl33.cluster
SEARCH STORE SIZE 225
SIZE OF ERRORS: 4
Doing cluster xcl34.cluster
SEARCH STORE SIZE 74
SIZE OF ERRORS: 1
Doing cluster xcl35.cluster
SEARCH STORE SIZE 161
SIZE OF ERRORS: 4
Doing cluster xcl36.cluster
SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
Doing cluster xcl37.cluster
SEARCH STORE SIZE 13
SIZE OF ERRORS: 0
Doing cluster xcl38.cluster
SEARCH STORE SIZE 208
SIZE OF ERRORS: 5
Doing cluster xcl39.cluster
SEARCH STORE SIZE 96
SIZE OF ERRORS: 2
Doing cluster xcl40.cluster
SEARCH STORE SIZE 177
SIZE OF ERRORS: 7
SEARCH STORE SIZE 231
SIZE OF ERRORS: 8
Doing cluster xcl41.cluster
Doing cluster xcl42.cluster
SEARCH STORE SIZE 33
SIZE OF ERRORS: 1
Doing cluster xcl43.cluster
SEARCH STORE SIZE 21
SIZE OF ERRORS: 0
Doing cluster xcl44.cluster
SEARCH STORE SIZE 112
SIZE OF ERRORS: 2
Doing cluster xcl45.cluster
SEARCH STORE SIZE 98
SIZE OF ERRORS: 3
SEARCH STORE SIZE 133
SIZE OF ERRORS: 5
Doing cluster xcl46.cluster
SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
Doing cluster xcl47.cluster
SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
Doing cluster xcl48.cluster
Doing cluster xcl49.cluster
SEARCH STORE SIZE 90
SIZE OF ERRORS: 2
Doing cluster xcl50.cluster
SEARCH STORE SIZE 99
SIZE OF ERRORS: 1
Doing cluster xcl51.cluster
SEARCH STORE SIZE 37
SIZE OF ERRORS: 1
Doing cluster xcl52.cluster
SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
Doing cluster xcl53.cluster
SEARCH STORE SIZE 54
SIZE OF ERRORS: 1
Doing cluster xcl54.cluster
SEARCH STORE SIZE 22
SIZE OF ERRORS: 1
Doing cluster xcl55.cluster
SEARCH STORE SIZE 103
SIZE OF ERRORS: 4
Doing cluster xcl56.cluster
SEARCH STORE SIZE 7
SIZE OF ERRORS: 0
Doing cluster xcl57.cluster
SEARCH STORE SIZE 64
SIZE OF ERRORS: 1
SEARCH STORE SIZE 90
SIZE OF ERRORS: 1
Doing cluster xcl58.cluster
Doing cluster xcl59.cluster
SEARCH STORE SIZE 28
SIZE OF ERRORS: 0
Doing cluster xcl60.cluster
SEARCH STORE SIZE 253
SIZE OF ERRORS: 9
[+] Found error: NULL_DEREFERENCE
[+] Patchable error: [core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java]:[293] :[[B1] object targetField last assigned on line 292 could be null and is dereferenced by call to setReceiverNullness(...) at line 293]
[+] Patch generation routine started for bug "NULL_DEREF".
[+] Looking for pvar targetField in pname Nullness NullnessPropagationTransfer.visitAssignment(AssignmentNode,AbstractNullnessPropagationTransfer$SubNodeValues,AbstractNullnessPropagationTransfer$LocalVariableUpdates)
[=] I found these typs for pvar targetField
	[=] class com.google.errorprone.dataflow.nullnesspropagation.NullnessPropagationTransfer$ClassAndField *
[+] pvar NAME is null: "targetField"
[+] pvar TYPE is null: "class com.google.errorprone.dataflow.nullnesspropagation.NullnessPropagationTransfer$ClassAndField *"
[+] Performing assert spec patch routine
[+] Filtered 2 null_exn candidates
	[-] No candidates found.
	[-] No candidates found.
	[=] Attempting patching with spec "null_exn_deref_bottom_type"
	[+] Footpatch_spec : Store size 253
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called callee
					[%] Candidate pre operates on var called callee
					[%] Candidate pre operates on var called accessed
					[%] Candidate pre operates on var called accessed
					[%] Candidate pre operates on var called accessed
					[%] Candidate pre operates on var called targetField
					[%] Candidate pre operates on var called targetField
					[%] Candidate pre operates on var called targetField
[+] Filtered candidates: 0
[+] Filtered candidates by type: 0
	[=] Attempting patching with spec "null_exn_deref_with_type"
	[+] Footpatch_spec : Store size 253
[+] Filtered candidates: 0
[+] Filtered candidates by type: 0
[+] Found error: NULL_DEREFERENCE
[+] Patchable error: [core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java]:[337] :[[B2] object accessed last assigned on line 336 could be null and is dereferenced by call to setReceiverNullness(...) at line 337]
[+] Patch generation routine started for bug "NULL_DEREF".
[+] Looking for pvar accessed in pname Nullness NullnessPropagationTransfer.visitFieldAccess(FieldAccessNode,AbstractNullnessPropagationTransfer$LocalVariableUpdates)
[=] I found these typs for pvar accessed
	[=] class com.google.errorprone.dataflow.nullnesspropagation.NullnessPropagationTransfer$ClassAndField *
[+] pvar NAME is null: "accessed"
[+] pvar TYPE is null: "class com.google.errorprone.dataflow.nullnesspropagation.NullnessPropagationTransfer$ClassAndField *"
[+] Performing assert spec patch routine
[+] Filtered 2 null_exn candidates
	[-] No candidates found.
	[-] No candidates found.
	[=] Attempting patching with spec "null_exn_deref_bottom_type"
	[+] Footpatch_spec : Store size 253
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called symbol
					[%] Candidate pre operates on var called callee
					[%] Candidate pre operates on var called callee
					[%] Candidate pre operates on var called accessed
					[%] Candidate pre operates on var called accessed
					[%] Candidate pre operates on var called accessed
					[%] Candidate pre operates on var called targetField
					[%] Candidate pre operates on var called targetField
					[%] Candidate pre operates on var called targetField
[+] Filtered candidates: 0
[+] Filtered candidates by type: 0
	[=] Attempting patching with spec "null_exn_deref_with_type"
	[+] Footpatch_spec : Store size 253
[+] Filtered candidates: 0
[+] Filtered candidates by type: 0
Doing cluster xcl61.cluster
SEARCH STORE SIZE 80
SIZE OF ERRORS: 3
Doing cluster xcl62.cluster
SEARCH STORE SIZE 75
SIZE OF ERRORS: 1
Doing cluster xcl63.cluster
SEARCH STORE SIZE 160
SIZE OF ERRORS: 6
Doing cluster xcl64.cluster
SEARCH STORE SIZE 10
SIZE OF ERRORS: 0
Doing cluster xcl65.cluster
SEARCH STORE SIZE 118
SIZE OF ERRORS: 4
[+] Found error: NULL_DEREFERENCE
[+] Patchable error: [core/src/main/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalField.java]:[88] :[[B2] object returned by findEnclosingNode(state.getPath(),com.sun.source.tree.ClassTree) could be null and is dereferenced at line 88]
[+] Patch generation routine started for bug "NULL_DEREF".
[+] Looking for pvar returned in pname boolean GuiceInjectOnFinalField.isField(Tree,VisitorState)
[=] I found these typs for pvar returned
[-] No type for pvar found
Doing cluster xcl66.cluster
SEARCH STORE SIZE 261
SIZE OF ERRORS: 12
Doing cluster xcl67.cluster
SEARCH STORE SIZE 20
SIZE OF ERRORS: 0
Doing cluster xcl68.cluster
SEARCH STORE SIZE 94
SIZE OF ERRORS: 1
SEARCH STORE SIZE 118
SIZE OF ERRORS: 3
Doing cluster xcl69.cluster
Doing cluster xcl70.cluster
SEARCH STORE SIZE 148
SIZE OF ERRORS: 5
Doing cluster xcl71.cluster
SEARCH STORE SIZE 27
SIZE OF ERRORS: 1
Doing cluster xcl72.cluster
SEARCH STORE SIZE 94
SIZE OF ERRORS: 3
Doing cluster xcl73.cluster
SEARCH STORE SIZE 52
SIZE OF ERRORS: 1
Doing cluster xcl74.cluster
SEARCH STORE SIZE 18
SIZE OF ERRORS: 0
Doing cluster xcl75.cluster
SEARCH STORE SIZE 54
SIZE OF ERRORS: 0
Doing cluster xcl76.cluster
SEARCH STORE SIZE 12
SIZE OF ERRORS: 0
Doing cluster xcl77.cluster
SEARCH STORE SIZE 139
SIZE OF ERRORS: 1
SEARCH STORE SIZE 127
SIZE OF ERRORS: 2
Doing cluster xcl78.cluster
Doing cluster xcl79.cluster
SEARCH STORE SIZE 121
SIZE OF ERRORS: 0
Doing cluster xcl80.cluster
SEARCH STORE SIZE 75
SIZE OF ERRORS: 1
SEARCH STORE SIZE 37
SIZE OF ERRORS: 1
Doing cluster xcl81.cluster
Doing cluster xcl82.cluster
SEARCH STORE SIZE 14
SIZE OF ERRORS: 1
SEARCH STORE SIZE 174
SIZE OF ERRORS: 5
Doing cluster xcl83.cluster
Doing cluster xcl84.cluster
SEARCH STORE SIZE 22
SIZE OF ERRORS: 0
Doing cluster xcl85.cluster
SEARCH STORE SIZE 105
SIZE OF ERRORS: 2
Doing cluster xcl86.cluster
SEARCH STORE SIZE 115
SIZE OF ERRORS: 2
Doing cluster xcl87.cluster
SEARCH STORE SIZE 53
SIZE OF ERRORS: 1
[+] Found error: RESOURCE_LEAK
[+] Patchable error: [core/src/main/java/com/google/errorprone/fixes/AppliedFix.java]:[97] :[ resource of type java.io.LineNumberReader acquired to lineNumberReader by call to new() at line 88 is not released after line 97]
[+] Complete err string: " resource of type java.io.LineNumberReader acquired to lineNumberReader by call to new() at line 88 is not released after line 97"
[+] ERROR LINE IS: 88
[+] NOTE: pvar: lineNumberReader (heuristic from error message) and pvar lineNumberReader (extracted from error message line number).
[+] pvar is lineNumberReader and heurstic is lineNumberReader. Using pvar lineNumberReader
[+] Patch generation routine started for bug "RESOURCE_LEAK".
[+] pvar NAME is leaked: "lineNumberReader"
[+] adding spec for type:  "class java.io.LineNumberReader *"
[+] Spec asked to look for type "java.io.LineNumberReader"
	[=] Attempting patching with spec "close_file_resource_with_type"
	[+] Footpatch_spec : Store size 53
[+] Filtered candidates: 0
[+] Prioritizing compatibility for type: class java.io.LineNumberReader *
[+] No specific candidate for type class java.io.LineNumberReader *. Returning 0 additional candidates. (multiple candidates will issue patch_1, patch_2...)
[+] Filtered candidates by type: 0
Doing cluster xcl88.cluster
SEARCH STORE SIZE 94
SIZE OF ERRORS: 1
Doing cluster xcl89.cluster
SEARCH STORE SIZE 20
SIZE OF ERRORS: 0
Doing cluster xcl90.cluster
SEARCH STORE SIZE 74
SIZE OF ERRORS: 2
Doing cluster xcl91.cluster
SEARCH STORE SIZE 82
SIZE OF ERRORS: 1
Doing cluster xcl92.cluster
SEARCH STORE SIZE 111
SIZE OF ERRORS: 1
Doing cluster xcl93.cluster
SEARCH STORE SIZE 455
SIZE OF ERRORS: 17
Doing cluster xcl94.cluster
SEARCH STORE SIZE 432
SIZE OF ERRORS: 1
[+] Found error: NULL_DEREFERENCE
[+] Patchable error: [core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java]:[311] :[[B2] object returned by tryGetMethodSymbol(node.getTree()) could be null and is dereferenced at line 311]
[+] Patch generation routine started for bug "NULL_DEREF".
[+] Looking for pvar returned in pname TransferResult AbstractNullnessPropagationTransfer.visitMethodInvocation(MethodInvocationNode,TransferInput)
[=] I found these typs for pvar returned
[-] No type for pvar found
Doing cluster xcl95.cluster
SEARCH STORE SIZE 79
SIZE OF ERRORS: 1
Doing cluster xcl96.cluster
SEARCH STORE SIZE 144
SIZE OF ERRORS: 4
Doing cluster xcl97.cluster
SEARCH STORE SIZE 218
SIZE OF ERRORS: 7
SEARCH STORE SIZE 80
SIZE OF ERRORS: 2
SEARCH STORE SIZE 118
SIZE OF ERRORS: 1
Doing cluster xcl98.cluster
Doing cluster xcl99.cluster
Doing cluster xcl100.cluster
SEARCH STORE SIZE 97
SIZE OF ERRORS: 2
Doing cluster xcl101.cluster
SEARCH STORE SIZE 98
SIZE OF ERRORS: 1
Doing cluster xcl102.cluster
SEARCH STORE SIZE 25
SIZE OF ERRORS: 0
Doing cluster xcl103.cluster
SEARCH STORE SIZE 281
SIZE OF ERRORS: 7
[+] Found error: NULL_DEREFERENCE
[+] Patchable error: [core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java]:[193] :[[B2] object method last assigned on line 191 could be null and is dereferenced by call to bindSelect(...) at line 193]
[+] Patch generation routine started for bug "NULL_DEREF".
[+] Looking for pvar method in pname GuardedByExpression GuardedByBinder$2.visitMethodInvocation(MethodInvocationTree,GuardedByBinder$BinderContext)
[=] I found these typs for pvar method
	[=] class com.sun.tools.javac.code.Symbol$MethodSymbol *
[+] pvar NAME is null: "method"
[+] pvar TYPE is null: "class com.sun.tools.javac.code.Symbol$MethodSymbol *"
[+] Performing assert spec patch routine
[+] Filtered 64 null_exn candidates
	[-] No candidates found.
	[-] No candidates found.
Linespan is 29 - 32 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 29 - 32
			[*] Origin function: <not implemented>
			[*] extracted:     if (base == null) {
			[*] extracted:       throw new NullPointerException("Null base");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: base -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (base == null) {\n      throw new NullPointerException(\"Null base\");\n    }" "base" "method" > /tmp/patch71c346.footpatch
SEARCH STORE SIZE 77
SIZE OF ERRORS: 1
Doing cluster xcl104.cluster
SEARCH STORE SIZE 146
SIZE OF ERRORS: 4
SEARCH STORE SIZE 72
SIZE OF ERRORS: 0
Doing cluster xcl105.cluster
Doing cluster xcl106.cluster
SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patch54320e.footpatch
Doing cluster xcl107.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch0fc075.footpatch
SEARCH STORE SIZE 10
SIZE OF ERRORS: 0
Doing cluster xcl108.cluster
SEARCH STORE SIZE 62
SIZE OF ERRORS: 1
Doing cluster xcl109.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 29 - 32 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 29 - 32
			[*] Origin function: <not implemented>
			[*] extracted:     if (base == null) {
			[*] extracted:       throw new NullPointerException("Null base");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: base -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (base == null) {\n      throw new NullPointerException(\"Null base\");\n    }" "base" "method" > /tmp/patchf9bdfa.footpatch
SEARCH STORE SIZE 86
SIZE OF ERRORS: 3
Doing cluster xcl110.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patchfbc16a.footpatch
SEARCH STORE SIZE 64
SIZE OF ERRORS: 1
Doing cluster xcl111.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patch14e89e.footpatch
SEARCH STORE SIZE 16
SIZE OF ERRORS: 0
Doing cluster xcl112.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patch6a448b.footpatch
SEARCH STORE SIZE 60
SIZE OF ERRORS: 1
SEARCH STORE SIZE 158
SIZE OF ERRORS: 6
Doing cluster xcl113.cluster
Doing cluster xcl114.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patched8552.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patchc5cf3f.footpatch
SEARCH STORE SIZE 18
SIZE OF ERRORS: 0
Doing cluster xcl115.cluster
SEARCH STORE SIZE 45
SIZE OF ERRORS: 0
Doing cluster xcl116.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch82396d.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patch4f2483.footpatch
SEARCH STORE SIZE 66
SIZE OF ERRORS: 1
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patchaf88f4.footpatch
Doing cluster xcl117.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patch5f2a7a.footpatch
SEARCH STORE SIZE 33
SIZE OF ERRORS: 1
Doing cluster xcl118.cluster
SEARCH STORE SIZE 150
SIZE OF ERRORS: 5
Doing cluster xcl119.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 25 - 28 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 25 - 28
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch10df5d.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 17 - 20 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 17 - 20
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patch30d1b0.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patch21fe31.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patchc1695d.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch24842e.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patchc6d642.footpatch
SEARCH STORE SIZE 62
SIZE OF ERRORS: 1
Doing cluster xcl120.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch0ec66f.footpatch
SEARCH STORE SIZE 190
SIZE OF ERRORS: 8
Doing cluster xcl121.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 17 - 20 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 17 - 20
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patch0c0d0a.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 25 - 28 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 25 - 28
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patchf6d25a.footpatch
SEARCH STORE SIZE 92
SIZE OF ERRORS: 4
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patch169a59.footpatch
Doing cluster xcl122.cluster
SEARCH STORE SIZE 20
SIZE OF ERRORS: 1
Doing cluster xcl123.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch2403c4.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 21 - 24 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 21 - 24
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patch88d29b.footpatch
SEARCH STORE SIZE 276
SIZE OF ERRORS: 8
Doing cluster xcl124.cluster
SEARCH STORE SIZE 27
SIZE OF ERRORS: 1
Doing cluster xcl125.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
Linespan is 21 - 24 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 21 - 24
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patch4b7e10.footpatch
SEARCH STORE SIZE 241
SIZE OF ERRORS: 11
Doing cluster xcl126.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[=] Attempting patching with spec "null_exn_deref_bottom_type"
	[+] Footpatch_spec : Store size 281
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called symbol
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called symbol
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called sym
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called $irvar0
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called sym
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called method
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called method
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
[+] Filtered candidates: 2
	[+] Candidate 0: _fun_void IllegalGuardedBy.checkGuardedBy(boolean,String,java.lang.Object[])(n$77:int ,"Could not resolve: %s":class java.lang.String *,n$78:class java.lang.Object *(*)[_]) [line 220]
	[+] Candidate 1: _fun_void IllegalGuardedBy.checkGuardedBy(boolean,String,java.lang.Object[])(n$9:int ,"Could not resolve %s":class java.lang.String *,n$10:class java.lang.Object *(*)[_]) [line 238]
[+] Filtered candidates by type: 2
--------------Patch routine for 1 candidate------------------
		[*] Origin filename: /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
			[*] Origin line num range: 219 - 220
			[*] Origin function: GuardedByExpression GuardedByBinder$2.visitMemberSelect(MemberSelectTree,GuardedByBinder$BinderContext)
			[*] extracted:           checkGuardedBy(sym != null, "Could not resolve: %s", node);
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "          checkGuardedBy(sym != null, \"Could not resolve: %s\", node);" "sym" "method" > /tmp/patchf52143.footpatch
	[+] Filtered patch 36 locations (optional): [272, 271, 185, 144, 143, 183, 182, 226, 225, 193, 170, 168, 166, 145, 160, 159, 128, 127, 124, 121, 120, 165, 150, 148, 191, 190, 189, 188, 196, 180, 179, 36, 33, 32, 177, 175]
	[+] Patching at primary location: 193
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_deref_bottom_type/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_deref_bottom_type/patches.
		[+] Have fragment "    checkGuardedBy(method != null, \"Could not resolve: %s\", node);"
		[+] Attempting to extract line 193 from file /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
		[+] Succesfully extracted "              return bindSelect(normalizeBase(context, method, base), method);"
			 [+] No match for line containing {
		[-]not modifying fragment
		[+] Fragment is return. Doing if bracket atlocation-1 if needed
Reading from file /tmp/GuardedByBinder.java_tmp_patched_diff

Wrote to file /tmp/GuardedByBinder.java_tmp_patched_diff
		[p] Patch command 1: "diff -u /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java /tmp/GuardedByBinder.java_tmp_patched_diff > /tmp/udiff_4b0918.footpatch" 
		[p] Patch command 2: "sed -i '1p;2d' /tmp/udiff_4b0918.footpatch" 
		[*] Destination filename: /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
			[*] Destination function: GuardedByExpression GuardedByBinder$2.visitMethodInvocation(MethodInvocationTree,GuardedByBinder$BinderContext)
			[*] Destination line insert: 193
	[+] Wrote patch GuardedByBinder_193_0.patch
	[+] Patching complete for spec with bucket 0
-------------------------FIN-----------------------------------
	[=] Attempting patching with spec "null_exn_deref_with_type"
	[+] Footpatch_spec : Store size 281
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
[+] Filtered candidates: 0
[+] Filtered candidates by type: 0
[+] Found error: NULL_DEREFERENCE
[+] Patchable error: [core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java]:[185] :[[B2] object method last assigned on line 183 could be null and is dereferenced by call to bindSelect(...) at line 185]
[+] Patch generation routine started for bug "NULL_DEREF".
[+] Looking for pvar method in pname GuardedByExpression GuardedByBinder$2.visitMethodInvocation(MethodInvocationTree,GuardedByBinder$BinderContext)
[=] I found these typs for pvar method
	[=] class com.sun.tools.javac.code.Symbol$MethodSymbol *
[+] pvar NAME is null: "method"
[+] pvar TYPE is null: "class com.sun.tools.javac.code.Symbol$MethodSymbol *"
[+] Performing assert spec patch routine
[+] Filtered 64 null_exn candidates
	[-] No candidates found.
	[-] No candidates found.
Linespan is 29 - 32 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 29 - 32
			[*] Origin function: <not implemented>
			[*] extracted:     if (base == null) {
			[*] extracted:       throw new NullPointerException("Null base");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: base -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (base == null) {\n      throw new NullPointerException(\"Null base\");\n    }" "base" "method" > /tmp/patch4a8a32.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patch8e84dc.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch6b12e6.footpatch
SEARCH STORE SIZE 184
SIZE OF ERRORS: 5
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 29 - 32 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 29 - 32
			[*] Origin function: <not implemented>
			[*] extracted:     if (base == null) {
			[*] extracted:       throw new NullPointerException("Null base");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: base -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (base == null) {\n      throw new NullPointerException(\"Null base\");\n    }" "base" "method" > /tmp/patchaa682b.footpatch
Doing cluster xcl127.cluster
SEARCH STORE SIZE 112
SIZE OF ERRORS: 2
Doing cluster xcl128.cluster
SEARCH STORE SIZE 70
SIZE OF ERRORS: 3
[+] Found error: NULL_DEREFERENCE
[+] Patchable error: [core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalField.java]:[76] :[[B2] object returned by findEnclosingNode(state.getPath(),com.sun.source.tree.ClassTree) could be null and is dereferenced at line 76]
[+] Patch generation routine started for bug "NULL_DEREF".
[+] Looking for pvar returned in pname boolean InjectJavaxInjectOnFinalField.isField(Tree,VisitorState)
[=] I found these typs for pvar returned
[-] No type for pvar found
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patchb85b11.footpatch
Doing cluster xcl129.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patch2ed457.footpatch
SEARCH STORE SIZE 46
SIZE OF ERRORS: 1
Doing cluster xcl130.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patch9c11b0.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patchf78bbb.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patch6d3924.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch158fc0.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patcha5f664.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patch6e7e73.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patchff97a4.footpatch
SEARCH STORE SIZE 223
SIZE OF ERRORS: 15
[+] Found error: NULL_DEREFERENCE
[+] Patchable error: [core/src/main/java/com/google/errorprone/bugpatterns/NoAllocationChecker.java]:[337] :[[B2] object methodSymbol last assigned on line 336 could be null and is dereferenced at line 337]
[+] Patch generation routine started for bug "NULL_DEREF".
[+] Looking for pvar methodSymbol in pname boolean NoAllocationChecker$3.matches(MethodInvocationTree,VisitorState)
[=] I found these typs for pvar methodSymbol
	[=] class com.sun.tools.javac.code.Symbol$MethodSymbol *
[+] pvar NAME is null: "methodSymbol"
[+] pvar TYPE is null: "class com.sun.tools.javac.code.Symbol$MethodSymbol *"
[+] Performing assert spec patch routine
[+] Filtered 4 null_exn candidates
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
	[=] Attempting patching with spec "null_exn_deref_bottom_type"
	[+] Footpatch_spec : Store size 223
[+] Filtered candidates: 0
[+] Filtered candidates by type: 0
	[=] Attempting patching with spec "null_exn_deref_with_type"
	[+] Footpatch_spec : Store size 223
[+] Filtered candidates: 0
[+] Filtered candidates by type: 0
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 25 - 28 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 25 - 28
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch318e98.footpatch
Doing cluster xcl131.cluster
SEARCH STORE SIZE 121
SIZE OF ERRORS: 3
Doing cluster xcl132.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 17 - 20 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 17 - 20
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patchf98de1.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patch710da4.footpatch
SEARCH STORE SIZE 91
SIZE OF ERRORS: 1
Doing cluster xcl133.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 15 - 18 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 15 - 18
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patcha0bd8f.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch4556d9.footpatch
SEARCH STORE SIZE 283
SIZE OF ERRORS: 3
SEARCH STORE SIZE 62
SIZE OF ERRORS: 1
Doing cluster xcl134.cluster
Doing cluster xcl135.cluster
SEARCH STORE SIZE 146
SIZE OF ERRORS: 4
Doing cluster xcl136.cluster
SEARCH STORE SIZE 34
SIZE OF ERRORS: 1
SEARCH STORE SIZE 20
SIZE OF ERRORS: 0
Doing cluster xcl137.cluster
Doing cluster xcl138.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch537141.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_LocalVariable.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch041b16.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 17 - 20 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 17 - 20
			[*] Origin function: <not implemented>
			[*] extracted:     if (kind == null) {
			[*] extracted:       throw new NullPointerException("Null kind");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: kind -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (kind == null) {\n      throw new NullPointerException(\"Null kind\");\n    }" "kind" "method" > /tmp/patch3a188d.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 25 - 28 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 25 - 28
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patchc0867c.footpatch
SEARCH STORE SIZE 62
SIZE OF ERRORS: 2
Doing cluster xcl139.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 19 - 22 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_ClassLiteral.java
			[*] Origin line num range: 19 - 22
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patch6f6d75.footpatch
SEARCH STORE SIZE 81
SIZE OF ERRORS: 3
SEARCH STORE SIZE 110
SIZE OF ERRORS: 5
Doing cluster xcl140.cluster
Doing cluster xcl141.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
	[-] No candidates found.
Linespan is 23 - 26 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_TypeLiteral.java
			[*] Origin line num range: 23 - 26
			[*] Origin function: <not implemented>
			[*] extracted:     if (type == null) {
			[*] extracted:       throw new NullPointerException("Null type");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: type -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (type == null) {\n      throw new NullPointerException(\"Null type\");\n    }" "type" "method" > /tmp/patch3e2e2d.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
Linespan is 21 - 24 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 21 - 24
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patchdd284a.footpatch
SEARCH STORE SIZE 53
SIZE OF ERRORS: 1
Doing cluster xcl142.cluster
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[-] No candidates found.
Linespan is 21 - 24 (ZERO INDEXED. ADD 1 IF LOOKING AT SOURCE)
		[*] Origin filename: /home/vagrant/projects/error-prone/core/target/generated-sources/annotations/com/google/errorprone/bugpatterns/threadsafety/AutoValue_GuardedByExpression_Select.java
			[*] Origin line num range: 21 - 24
			[*] Origin function: <not implemented>
			[*] extracted:     if (sym == null) {
			[*] extracted:       throw new NullPointerException("Null sym");
			[*] extracted:     }
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "    if (sym == null) {\n      throw new NullPointerException(\"Null sym\");\n    }" "sym" "method" > /tmp/patchfa95ed.footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert
	[+] Success creating dir!
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_assert/patches.
	[=] Attempting patching with spec "null_exn_deref_bottom_type"
	[+] Footpatch_spec : Store size 281
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called symbol
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called symbol
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called sym
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called $irvar0
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called sym
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called method
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate pre operates on var called method
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
[+] Filtered candidates: 2
	[+] Candidate 0: _fun_void IllegalGuardedBy.checkGuardedBy(boolean,String,java.lang.Object[])(n$77:int ,"Could not resolve: %s":class java.lang.String *,n$78:class java.lang.Object *(*)[_]) [line 220]
	[+] Candidate 1: _fun_void IllegalGuardedBy.checkGuardedBy(boolean,String,java.lang.Object[])(n$9:int ,"Could not resolve %s":class java.lang.String *,n$10:class java.lang.Object *(*)[_]) [line 238]
[+] Filtered candidates by type: 2
--------------Patch routine for 1 candidate------------------
		[*] Origin filename: /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
			[*] Origin line num range: 219 - 220
			[*] Origin function: GuardedByExpression GuardedByBinder$2.visitMemberSelect(MemberSelectTree,GuardedByBinder$BinderContext)
			[*] extracted:           checkGuardedBy(sym != null, "Could not resolve: %s", node);
	[&] Renaming fragment fixing var to pvar: sym -> method
	[&]FFF Running cmd for rename: /home/vagrant/footpatch/infer-linux64-v0.9.3/patching/rename/rename "          checkGuardedBy(sym != null, \"Could not resolve: %s\", node);" "sym" "method" > /tmp/patch9fb026.footpatch
SEARCH STORE SIZE 63
SIZE OF ERRORS: 3
Doing cluster xcl143.cluster
SEARCH STORE SIZE 95
SIZE OF ERRORS: 1
[+] Found error: RESOURCE_LEAK
[+] Patchable error: [core/src/main/java/com/google/errorprone/fixes/AppliedFix.java]:[97] :[ resource of type java.io.LineNumberReader acquired to lineNumberReader by call to new() at line 88 is not released after line 97]
[+] Complete err string: " resource of type java.io.LineNumberReader acquired to lineNumberReader by call to new() at line 88 is not released after line 97"
[+] ERROR LINE IS: 88
[+] NOTE: pvar: lineNumberReader (heuristic from error message) and pvar lineNumberReader (extracted from error message line number).
[+] pvar is lineNumberReader and heurstic is lineNumberReader. Using pvar lineNumberReader
[+] Patch generation routine started for bug "RESOURCE_LEAK".
[+] pvar NAME is leaked: "lineNumberReader"
[+] adding spec for type:  "class java.io.LineNumberReader *"
[+] Spec asked to look for type "java.io.LineNumberReader"
	[=] Attempting patching with spec "close_file_resource_with_type"
	[+] Footpatch_spec : Store size 95
[+] Filtered candidates: 0
[+] Prioritizing compatibility for type: class java.io.LineNumberReader *
[+] No specific candidate for type class java.io.LineNumberReader *. Returning 0 additional candidates. (multiple candidates will issue patch_1, patch_2...)
[+] Filtered candidates by type: 0
Doing cluster xcl144.cluster
	[+] Filtered patch 36 locations (optional): [272, 271, 185, 144, 143, 183, 182, 226, 225, 193, 170, 168, 166, 145, 160, 159, 128, 127, 124, 121, 120, 165, 150, 148, 191, 190, 189, 188, 196, 180, 179, 36, 33, 32, 177, 175]
	[+] Patching at primary location: 185
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch
	[+] Create dir /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_deref_bottom_type/patches
	[+] Success creating dir!
	[+] Writing patches to /home/vagrant/projects/error-prone/infer-out/footpatch/null_exn_deref_bottom_type/patches.
		[+] Have fragment "    checkGuardedBy(method != null, \"Could not resolve: %s\", node);"
		[+] Attempting to extract line 185 from file /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
		[+] Succesfully extracted "              return bindSelect(computeBase(context, method), method);"
			 [+] No match for line containing {
		[-]not modifying fragment
		[+] Fragment is return. Doing if bracket atlocation-1 if needed
Reading from file /tmp/GuardedByBinder.java_tmp_patched_diff

Wrote to file /tmp/GuardedByBinder.java_tmp_patched_diff
		[p] Patch command 1: "diff -u /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java /tmp/GuardedByBinder.java_tmp_patched_diff > /tmp/udiff_8e58fd.footpatch" 
		[p] Patch command 2: "sed -i '1p;2d' /tmp/udiff_8e58fd.footpatch" 
		[*] Destination filename: /home/vagrant/projects/error-prone/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
			[*] Destination function: GuardedByExpression GuardedByBinder$2.visitMethodInvocation(MethodInvocationTree,GuardedByBinder$BinderContext)
			[*] Destination line insert: 185
	[+] Wrote patch GuardedByBinder_185_0.patch
	[+] Patching complete for spec with bucket 0
-------------------------FIN-----------------------------------
	[=] Attempting patching with spec "null_exn_deref_with_type"
	[+] Footpatch_spec : Store size 281
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
					[%] Candidate post operates on var called return
[+] Filtered candidates: 0
[+] Filtered candidates by type: 0
Doing cluster xcl145.cluster
SEARCH STORE SIZE 133
SIZE OF ERRORS: 1
Doing cluster xcl146.cluster
SEARCH STORE SIZE 87
SIZE OF ERRORS: 1
Doing cluster xcl147.cluster
SEARCH STORE SIZE 67
SIZE OF ERRORS: 1
Doing cluster xcl148.cluster
SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
Doing cluster xcl149.cluster
SEARCH STORE SIZE 60
SIZE OF ERRORS: 1
Doing cluster xcl150.cluster
SEARCH STORE SIZE 224
SIZE OF ERRORS: 6
Doing cluster xcl151.cluster
SEARCH STORE SIZE 24
SIZE OF ERRORS: 0
Doing cluster xcl152.cluster
SEARCH STORE SIZE 60
SIZE OF ERRORS: 3
Doing cluster xcl153.cluster
SEARCH STORE SIZE 160
SIZE OF ERRORS: 1
Doing cluster xcl154.cluster
SEARCH STORE SIZE 9
SIZE OF ERRORS: 1
Doing cluster xcl155.cluster
SEARCH STORE SIZE 107
SIZE OF ERRORS: 3
Doing cluster xcl156.cluster
SEARCH STORE SIZE 21
SIZE OF ERRORS: 1
Doing cluster xcl157.cluster
SEARCH STORE SIZE 56
SIZE OF ERRORS: 1
SEARCH STORE SIZE 75
SIZE OF ERRORS: 1
Doing cluster xcl158.cluster
Doing cluster xcl159.cluster
SEARCH STORE SIZE 338
SIZE OF ERRORS: 10
Doing cluster xcl160.cluster
SEARCH STORE SIZE 8
SIZE OF ERRORS: 2
Doing cluster xcl161.cluster
SEARCH STORE SIZE 43
SIZE OF ERRORS: 1
Doing cluster xcl162.cluster
SEARCH STORE SIZE 44
SIZE OF ERRORS: 0
Doing cluster xcl163.cluster
SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
Doing cluster xcl164.cluster
SEARCH STORE SIZE 106
SIZE OF ERRORS: 0
Doing cluster xcl165.cluster
SEARCH STORE SIZE 5
SIZE OF ERRORS: 0
Doing cluster xcl166.cluster
SEARCH STORE SIZE 0
SIZE OF ERRORS: 0
Doing cluster xcl167.cluster
SEARCH STORE SIZE 119
SIZE OF ERRORS: 6
Doing cluster xcl168.cluster
SEARCH STORE SIZE 48
SIZE OF ERRORS: 1
Doing cluster xcl169.cluster
SEARCH STORE SIZE 51
SIZE OF ERRORS: 1
Doing cluster xcl170.cluster
SEARCH STORE SIZE 207
SIZE OF ERRORS: 7
Doing cluster xcl171.cluster
SEARCH STORE SIZE 102
SIZE OF ERRORS: 3
Doing cluster xcl172.cluster
SEARCH STORE SIZE 45
SIZE OF ERRORS: 2
Doing cluster xcl173.cluster
SEARCH STORE SIZE 5
SIZE OF ERRORS: 0
Doing cluster xcl174.cluster
SEARCH STORE SIZE 45
SIZE OF ERRORS: 0
Doing cluster xcl175.cluster
SEARCH STORE SIZE 115
SIZE OF ERRORS: 0
Doing cluster xcl176.cluster
SEARCH STORE SIZE 58
SIZE OF ERRORS: 1
Doing cluster xcl177.cluster
SEARCH STORE SIZE 17
SIZE OF ERRORS: 0
Doing cluster xcl178.cluster
SEARCH STORE SIZE 54
SIZE OF ERRORS: 0
SEARCH STORE SIZE 78
SIZE OF ERRORS: 1
Doing cluster xcl179.cluster
SEARCH STORE SIZE 140
SIZE OF ERRORS: 3
SEARCH STORE SIZE 626
SIZE OF ERRORS: 20
SEARCH STORE SIZE 1106
SIZE OF ERRORS: 22
